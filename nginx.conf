events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Performance optimizations for high throughput
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting for IoT applications
    limit_req_zone $binary_remote_addr zone=api:10m rate=1000r/s;
    limit_req_zone $binary_remote_addr zone=tiles:10m rate=2000r/s;
    limit_req_zone $binary_remote_addr zone=geocoding:10m rate=5000r/s;

    # Upstream servers with load balancing
    upstream nominatim {
        least_conn;
        server nominatim-1:8080 max_fails=3 fail_timeout=30s;
        server nominatim-2:8080 max_fails=3 fail_timeout=30s;
        server nominatim-3:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream osrm {
        server osrm-routing:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream tegola {
        server tegola-tileserver:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nominatim geocoding API (optimized for IoT)
        location /nominatim/ {
            limit_req zone=geocoding burst=200 nodelay;
            
            # Performance headers
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-Response-Time $upstream_response_time;
            
            proxy_pass http://nominatim/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Timeouts optimized for IoT
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # OSRM routing API (optimized for IoT)
        location /osrm/ {
            limit_req zone=api burst=100 nodelay;
            
            # Performance headers
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-Response-Time $upstream_response_time;
            
            proxy_pass http://osrm/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Timeouts optimized for IoT
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Tegola tile server (optimized for IoT)
        location /tiles/ {
            limit_req zone=tiles burst=500 nodelay;
            
            # Performance headers
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-Response-Time $upstream_response_time;
            
            proxy_pass http://tegola/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Timeouts optimized for IoT
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache tiles for 1 hour
            proxy_cache_valid 200 1h;
            add_header Cache-Control "public, max-age=3600";
        }

        # Root redirect to documentation
        location / {
            return 200 'High-Performance Map Server API\n\nAvailable endpoints:\n- /nominatim/ - Geocoding service (IoT optimized)\n- /osrm/ - Routing service\n- /tiles/ - Tile server\n- /health - Health check\n\nPerformance: Up to 5000 req/s geocoding, 1000 req/s routing, 2000 req/s tiles';
            add_header Content-Type text/plain;
        }
    }
} 